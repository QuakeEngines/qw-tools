// Entities.def for GtkRadiant 1.4 and ZeroRadiant 1.6
// Version: 1.7.4
// Updated: 2012-07-20

//=============================================================================

Q3MAP2 ENTITIES

//=============================================================================

/*QUAKED _decal (0 1.0 0) ?
Compiler-only entity that specifies a decal to be projected.
-------- KEYS --------
target: The name of the entity targeted for projection.
-------- NOTES --------
Should contain 1 or more patch meshes (curves) and target an info_null entity. Patch mesh should be using a shader with "polygonoffset" (or other blending methods) or z-fighting will occur. The distance between the center of the _decal entity and the target is the axis and distance of projection.*/

//=============================================================================

/*QUAKED _skybox (0.77 0.88 1.0) (-4 -4 -4) (4 4 4)
Compiler-only entity that specifies the origin of a skybox (a wholly contained, separate area of the map).
-------- KEYS --------
angle: Rotation angle of the sky surfaces.
angles: Individual control of PITCH, YAW, and ROLL (default: 0 0 0).
_scale: Scaling factor (default: 64), good values are between 50 and 300, depending on the map.
-------- NOTES --------
When compiled, the skybox surfaces will be visible from any place where sky is normally visible. It will cast shadows on the normal parts of the map, and can be used with cloud layers and other effects.*/

//=============================================================================

AMMO_* ENTITIES

//=============================================================================

/*QUAKED ammo_belt (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Chain Gun ammo. Gives the player 80 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 80).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/chaingunam.md3"*/

//=============================================================================

/*QUAKED ammo_bfg (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
BFG ammo. Gives the player 15 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 15).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/bfgam.md3"*/

//=============================================================================

/*QUAKED ammo_bullets (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Machine Gun ammo. Gives the player 40 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 40).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/machinegunam.md3"*/

//=============================================================================

/*QUAKED ammo_canisters (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Napalm Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/napalmam.md3"*/

//=============================================================================

/*QUAKED ammo_capsules (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Phosphor Gun ammo. Gives the player 50 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/phosphorgunam.md3"*/

//=============================================================================

/*QUAKED ammo_clip (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Trusty .44 ammo. Gives the player 50 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/handgunam.md3"*/

//=============================================================================

/*QUAKED ammo_charge (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Beam Gun ammo. Gives the player 50 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/chargeam.md3"*/

//=============================================================================

/*QUAKED ammo_cells (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Plasma Gun ammo. Gives the player 30 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/plasmaam.md3"*/

//=============================================================================

/*QUAKED ammo_grenades (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Grenade Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/grenadeam.md3"*/

//=============================================================================

/*QUAKED ammo_hmg_bullets (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Heavy Machinegun ammo. Gives the player 80 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 80).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/hmgunam.md3"*/

//=============================================================================

/*QUAKED ammo_mines (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Proxy Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/proxmineam.md3"*/

//=============================================================================

/*QUAKED ammo_missiles (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Napalm Launcher ammo. Gives the player 3 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 3).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/missileam.md3"*/

//=============================================================================

/*QUAKED ammo_nails (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Nail Gun ammo. Gives the player 5 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/nailgunam.md3"*/

//=============================================================================

/*QUAKED ammo_rockets (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Rocket Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/rocketam.md3"*/

//=============================================================================

/*QUAKED ammo_shells (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Shotgun ammo. Gives the player 10 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/shotgunam.md3"*/

//=============================================================================

/*QUAKED ammo_slugs (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
Railgun ammo. Gives the player 10 by default.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/railgunam.md3"*/

//=============================================================================

CORONA AND DLIGHT ENTITIES

//=============================================================================

/*QUAKED corona (0 1 0) (-4 -4 -4) (4 4 4) START_OFF
Add a corona at a given point.
-------- KEYS --------
_color: Weighted RGB value of corona color (default: 1.0 1.0 1.0 = white).
scale: It's multiplied times r_flareSize at run time.
targetname: The activating trigger points to this. Triggering the entity will toggle it on and off.
-------- SPAWNFLAGS --------
START_OFF: Starts non-visible.
-------- NOTES --------
Use color picker to set color or key "color". Values are 0.0 - 1.0 for each color.
(Note: 0.0 0.0 0.0 will be forced to white instead of black.)*/

//=============================================================================

/*QUAKED dlight (.65 .65 1) (-10 -10 -6) (10 10 6) FORCEACTIVE STARTOFF ONETIME
Add a real-time dynamic light at a given point. Useful for turning lights on and off in real-time or changing/flickering light effect.
-------- KEYS --------
_color: Weighted RGB value of light color (default: 1.0 1.0 1.0 = white).
style: Value is an int from 1 - 19 that contains a pre-defined 'flicker' string (see notes).
stylestring: Set your own 'flicker' string (e.g. "klmnmlk"). NOTE: this should be all lowercase.
offset: Change the initial index in a style string. So value of 3 in the above example would start this light at 'm' (used to get dlights using the same style out of sync).
atten: Offset from the alpha values of the stylestring. Stylestring of "ddeeffzz" with an atten of -1 would result in "ccddeeyy".
shader: Name of shader to apply.
sound: Sound to loop every cycle (this actually just plays the sound at the beginning of each cycle).
-------- SPAWNFLAGS --------
FORCEACTIVE: Toggle makes sure this light stays alive in a map even if the user has r_dynamiclight set to 0.
STARTOFF: The dlight doesn't spawn in until triggered.
ONETIME: When the dlight is triggered, it will play through it's cycle once, then shut down until triggered again.
-------- NOTES --------
Stylestring characters run at 10 cps in the game (meaning the alphabet, at 24 characters, would take 2.4 seconds to cycle).
Use color picker to set color or key "color". Values are 0.0 - 1.0 for each color.

style:
1 - "mmnmmommommnonmmonqnmmo"
2 - "abcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcba"
3 - "mmmmmaaaaammmmmaaaaaabcdefgabcdefg"
4 - "ma"
5 - "jklmnopqrstuvwxyzyxwvutsrqponmlkj"
6 - "nmonqnmomnmomomono"
7 - "mmmaaaabcdefgmmmmaaaammmaamm"
8 - "aaaaaaaazzzzzzzz"
9 - "mmamammmmammamamaaamammma"
10 - "abcdefghijklmnopqrrqponmlkjihgfedcba"
11 - "mmnommomhkmmomnonmmonqnmmo"
12 - "kmamaamakmmmaakmamakmakmmmma"
13 - "kmmmakakmmaaamammamkmamakmmmma"
14 - "mmnnoonnmmmmmmmmmnmmmmnonmmmmmmm"
15 - "mmmmnonmmmmnmmmmmnonmmmmmnmmmmmmm"
16 - "zzzzzzzzaaaaaaaa"
17 - "zzzzzzzzaaaaaaaaaaaaaaaa"
18 - "aaaaaaaazzzzzzzzaaaaaaaa"
19 - "aaaaaaaaaaaaaaaazzzzzzzz"*/

//=============================================================================

FUNC_* ENTITIES

//=============================================================================

/*QUAKED func_bobbing (0 .5 .8) ? X_AXIS Y_AXIS
Solid entity that oscillates back and forth in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the "noise" key is set. Will crush the player when blocked.
-------- KEYS --------
speed: Amount of time in seconds for one complete oscillation cycle (default: 4).
height: Sets the amount of travel of the oscillation movement (default: 32).
phase: Sets the start offset of the oscillation cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default: 0).
noise: Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav - see notes).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/jets/jets01.md3).
origin: Alternate method of setting XYZ origin of sound and .md3 model included with entity (see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- SPAWNFLAGS --------
X_AXIS: Entity will bob along the X axis.
Y_AXIS: Entity will bob along the Y axis.
-------- NOTES --------
In order for the sound to be emitted from the entity, it is recommended to include a brush with an origin shader at its center, otherwise the sound will not follow the entity as it moves.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

/*QUAKED func_button (0 .5 .8) ?
When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again.
-------- KEYS --------
angle: Determines the direction in which the button will move (up = -1, down = -2).
target: All entities with a matching targetname will be triggered.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
speed: Speed of button's displacement (default: 40).
wait: Number of seconds button stays pressed (default: 1, -1 = return immediately).
lip: Lip remaining at end of move (default: 4 units).
health: If set to any non-zero value, the button must take damage (any amount) to activate (default: 0).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).
origin: Alternate method of setting XYZ origin of .md3 model included with entity (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED func_door (0 .5 .8) ? START_OPEN - CRUSHER
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
-------- KEYS --------
angle: Determines the opening direction of door (up = -1, down = -2).
speed: Determines how fast the door moves (default is around 200).
wait: Number of seconds before door returns (default: 2, -1 = return immediately).
lip: Lip remaining at end of move (default: 8).
targetname: If set, a func_button or trigger is required to activate the door.
health: If set to any non-zero value, the button must take damage (any amount) to activate (default: 0).
dmg: Damage to inflict on player when he blocks operation of door (default: 4). Door will reverse direction when blocked unless CRUSHER spawnflag is set.
team: Assign the same team name to multiple doors that should operate together (see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).
origin: Alternate method of setting XYZ origin of .md3 model included with entity (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- SPAWNFLAGS --------
START_OPEN: The door will spawn in the open state and operate in reverse.
CRUSHER: Door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.
-------- NOTES --------
If you want doors to operate together, you have to team them manually by assigning the same team name to all of them.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

//=============================================================================

/*QUAKED func_group (0 .5 .8) ?
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.
-------- KEYS --------
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components. To make a func_group into a terrain entity, refer to the Terrain Construction documentation.*/

//=============================================================================

/*QUAKED func_pendulum (0 .5 .8) ?
Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the length of the beam and gravity. Blocking the pendulum instantly kills a player.
-------- KEYS --------
angle: Angle offset of axis of rotation from default X axis (default: 0).
speed: Angle of swing arc in either direction from initial position (default: 30).
phase: Sets the start offset of the swinging cycle. Values must be 0 < phase < 1. Any integer phase value is the same as no offset (default: 0).
noise: Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/jets/jets01.md3).
origin: Alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default: 0 0 0 - see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
Pendulum will rotate along the X axis by default. Pendulum cannot rotate along Z axis, the speed of swing (frequency) is not adjustable.

You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

/*QUAKED func_plat (0 .5 .8) ?
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off. There are no proper sounds for this entity, only beep noises. It will spawn in the game and work properly but it sounds silly (see notes).
-------- KEYS --------
speed: Determines how fast the plat moves (default: 150).
lip: Lip remaining at end of move (default: 16). Has no effect if "height" is set.
height: If set, this will determine the total amount of vertical travel of the plat.
dmg: Damage to inflict on player when he blocks operation of plat (default: 4). Plat will reverse direction when blocked.
targetname: If set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it.
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).
origin: Alternate method of setting XYZ origin of .md3 model included with entity (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the "height" key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the "lip" key. Using the "height" key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

There is a way to make plats play proper sounds. Just create a sound\movers\plats folder under baseq3 and put 2 sounds named pt1_strt.wav and pt1_end.wav in it. Those can be the renamed sounds from the Q2 plats or renamed copies of the sound\movers\doors sounds you can extract from your pak0.pk3 file or new custom sounds if you're up to it.*/

//=============================================================================

/*QUAKED func_rotating (0 .5 .8) ? - - X_AXIS Y_AXIS
Solid entity that rotates continuously. Rotates on the Z axis by default and requires an origin brush. It will always start on in the game and is not targetable.
-------- KEYS --------
speed: Determines how fast entity rotates (default: 100).
noise: Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav).
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/bitch/fembotbig.md3).
origin: Alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default: 0 0 0 - see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- SPAWNFLAGS --------
X_AXIS: Entity will rotate along the X axis.
Y_AXIS: Entity will rotate along the Y axis.
-------- NOTES --------
It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that.

You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

/*QUAKED func_static (0 .5 .8) ?
Static non-solid bspmodel. Can be used for conditional walls and models.
-------- KEYS --------
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/bitch/fembotbig.md3).
origin: Alternate method of setting XYZ origin of .md3 model included with entity (see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
targetname: NOT SUPPORTED BY RENDERER - if set, a func_button or trigger can make entity disappear from the game (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: It will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.

Because the map has only a single bot navigation file, func_static's cannot be used to make significant changes in game play flow between differing game types.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

/*QUAKED func_timer (0 .5 .8) (-8 -8 -8) (8 8 8) START_ON
Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.
-------- KEYS --------
wait: Delay in seconds between each triggering of its targets (default: 1).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
target: This points to the entities to trigger.
targetname: A func_button or trigger that points to this will toggle the timer on/off when activated.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
START_ON: Timer will start on in the game and continuously fire its targets.
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED func_train (0 .5 .8) ?
Trains are moving solids that follow a string of path_corner entities. Trains are very basic, they also require an origin brush (see notes).
-------- KEYS --------
speed: Speed of displacement of train (default: 100 or overridden by speed value of path).
target: This points to the first path_corner of the path which is also the spawn location of the train's origin.
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).
origin: Alternate method of setting XYZ origin of the train's brush(es) and .md3 model included with entity (see notes).
light: ConstantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default: 0).
color: ConstantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default: 1 1 1).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
targetname: Used to attach a misc_model entity to this entity.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in this entity (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.
-------- NOTES --------
1. Trains always start on in the game.
2. Trains do not damage the played when blocked.
3. Trains cannot emit sound.
4. Trains are not triggerable or toggle-able.
5. Trains cannot be block-stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.

Setting the origin key is simply an alternate method to using an origin brush.

When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

HOLDABLE_* ENTITIES

//=============================================================================

/*QUAKED holdable_kamikaze (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
One use kamikaze item that can be picked up and used later. Does an initial wave of shock damage, knockback, then 200 damage to everything in a 256 radius. It kills the using player when used. Player can only carry one holdable item at a time.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default 60, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/kamikazi.md3"*/

//=============================================================================

INFO_* ENTITIES

//=============================================================================

/*QUAKED info_camp (0.5 0 1) (-8 -8 -8) (8 8 8)
This atttracts bots which have a camping preference in their AI characteristics. It should be placed at least 32 units away from any brush surface. Removed during gameplay.
-------- KEYS --------
range: Number of units that the bot can move away from camp entity while camping on it.
weight: Number that is compared against the weight assigned to all the other camp spots in the map to determine if a bot chooses to camp there. The value is normalized against all other weight values.
-------- NOTES --------
Examples of bots which have a high camping preference are: Sorlag and Lucy. Examples of bots which have a low camping preference are: Klesk, Sarge, and Xaero.*/

//=============================================================================

/*QUAKED info_notnull (0 .5 0) (-8 -8 -8) (8 8 8)
Used as a positional target for entities that can use directional pointing.
-------- KEYS --------
targetname: Must match the target key of entity that uses this for pointing.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

/*QUAKED info_null (0 .5 0) (-8 -8 -8) (8 8 8)
Used as a positional target for calculations in the utilities (spotlights, decals etc.) Similar to info_notnull, but removed during gameplay.
-------- KEYS --------
targetname: Must match the target key of entity that uses this for pointing.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

/*QUAKED info_player_deathmatch (1 1 0) (-16 -16 -24) (16 16 64) INITIAL
Normal player spawning location for levels.
-------- KEYS --------
angle: Direction in which player will look when spawning in the game. Does not apply to bots.
target: This can point at a target_give entity for respawn freebies.
nobots: When set to 1, bots will never use this spawn point to respawn in the game.
nohumans: When set to 1, human players will never use this spawn point to respawn in the game.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
INITIAL: Makes the spawnpoint the initial place for the player to spawn at the beginning of the game.*/

//=============================================================================

/*QUAKED info_player_intermission (1 1 0) (-16 -16 -16) (16 16 16)
Camera for intermission screen between matches. This also automatically generates the podium for bot arena matches (see notes). Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use only one per level.
-------- KEYS --------
angles: Alternate "pitch, yaw, roll" angles method of aiming intermission camera (default: 0 0 0).
target: Point this to an info_notnull entity to set the camera's pointing angles.
-------- NOTES --------
In genuine bot arena matches, the podium for the 1st, 2nd and 3rd place players at the end of the match is generated by this entity. The podium's origin will automatically be located 128 units in the direction of the camera's view and 84 units down from the y height of the view line at that point. It will also always be generated on a level plane regardless of the pointing angle of the camera so if that angle is too steep, part of the podium model might not be visible. Make sure you leave at least 106 units of free space in front of where the camera points to otherwise the podium model won't be visible at all.*/

//=============================================================================

/*QUAKED info_player_start (1 0 0) (-16 -16 -24) (16 16 32)
Player spawn location. It works in Quake III Arena, but it is not used in the Id maps. Use info_player_deathmatch instead.
-------- KEYS --------
angle: Direction in which player will look when spawning in the game.
target: This can point at a target_give entity for respawn freebies.*/

//=============================================================================

ITEM_* ENTITIES

//=============================================================================

/*QUAKED item_ammoregen (0.3 0.3 1) (-16 -16 -16) (16 16 16) SUSPENDED REDTEAM BLUETEAM
Ammo Regen power-up. Slowly regenerates ammo count for all weapons currently possessed by the player. Instant use, lasts until death.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 0, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
REDTEAM: Only player on the red team may pick up this item.
BLUETEAM: Only player on the blue team may pick up this item.
-------- NOTES --------
These team entities are intended to respawn instantly.

The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo.md3"*/

//=============================================================================

/*QUAKED item_armor_body (.6 0 0) (-16 -16 -16) (16 16 16) SUSPENDED
Red Armor - 100 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 25, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/armor/armor_red.md3"*/

//=============================================================================

/*QUAKED item_armor_combat (1 .75 .3) (-16 -16 -16) (16 16 16) SUSPENDED
Yellow Armor - 50 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 25, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/armor/armor_yel.md3"*/

//=============================================================================

/*QUAKED item_armor_shard (0 .7 0) (-16 -16 -16) (16 16 16) SUSPENDED
Green Armor Shard - 5 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 25, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/armor/shard.md3"*/

//=============================================================================

/*QUAKED item_botroam (1 0.5 0) (-8 -8 -8) (8 8 8) SUSPENDED
An invisible entity which attracts a bot to it. Use to move bots to parts of a map that might otherwise not be used.
-------- KEYS --------
weight: Non-zero floating point value, most often in the range 0 to 400. Higher values are allowed but keep in mind that the bot should also be attracted to normal items.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The item_botroam entity can be used when a bot does not roam the whole level or prefers to go to only specific areas. This (invisible) item can be placed in a map just like regular items. Nobody can actually pick up the item it's only used to attract bots to certain places of the map. The weight of the botroam_item is relative to the weight assigned to other items in the map (each bot has its own weights). The bot character specific item weights are stored with the bot characters AI files ("botname"_i.c for items and "botname"_w.c for weapons) in the botfiles/bots/ sub-folder in the .pk3 file.*/

//=============================================================================

/*QUAKED item_doubler (0.3 0.3 1) (-16 -16 -16) (16 16 16) SUSPENDED REDTEAM BLUETEAM
Doubler power-up. Doubles the damage of player's weapons. Instant use, lasts until death.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 0, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
REDTEAM: Only player on the red team may pick up this item.
BLUETEAM: Only player on the blue team may pick up this item.
-------- NOTES --------
These team entities are intended to respawn instantly.

The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/doubler.md3"*/

//=============================================================================

/*QUAKED item_guard (0.3 0.3 1) (-16 -16 -16) (16 16 16) SUSPENDED REDTEAM BLUETEAM
Guard power-up. This will boost your current health by 5 points every second for a period of up to 30 seconds or up to 200 points whichever comes first. Instant use, lasts until death.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 0, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
REDTEAM: Only player on the red team may pick up this item.
BLUETEAM: Only player on the blue team may pick up this item.
-------- NOTES --------
These team entities are intended to respawn instantly.

The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/guard.md3"*/

//=============================================================================

/*QUAKED item_health (.8 .8 0) (-16 -16 -16) (16 16 16) SUSPENDED
Yellow cross bubble - 25 Health. Cannot be picked up over 100 health.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 35, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of health points given to the player when item is picked up (default: 25).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/health/medium_cross.md3"*/

//=============================================================================

/*QUAKED item_health_large (1 0 0) (-16 -16 -16) (16 16 16) SUSPENDED
Gold cross bubble - 50 Health. Cannot be picked up over 100 health.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 35, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of health points given to the player when item is picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/health/large_cross.md3"*/

//=============================================================================

/*QUAKED item_health_mega (0 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
Blue M bubble - 100 Health. Adds 100 health points to current health up to a maximum of 200.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 40, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of health points given to the player when item is picked up (default: 100).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/health/mega_cross.md3"*/

//=============================================================================

/*QUAKED item_health_small (0 1 0) (-16 -16 -16) (16 16 16) SUSPENDED
Green cross bubble - 5 Health. Can be picked up over 100 health but slowly wears out to 100 afterwards.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 35, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of health points given to the player when item is picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/health/small_cross.md3"*/

//=============================================================================

/*QUAKED item_invis (.5 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
Invisibility power-up. Lasts 30 seconds.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/invis.md3"*/

//=============================================================================

/*QUAKED item_quad (.4 .6 1) (-16 -16 -16) (16 16 16) SUSPENDED
Quad Damage power-up. Lasts 30 seconds.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/quad.md3"*/

//=============================================================================

/*QUAKED item_regen (.5 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
Health Regeneration power-up. This will boost your current health by 5 points every second for a period of up to 30 seconds or up to 200 points whichever comes first. Afterwards, any health points over 100 slowly wears out to 100.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/regen.md3"*/

//=============================================================================

/*QUAKED item_scout (0.3 0.3 1) (-16 -16 -16) (16 16 16) SUSPENDED REDTEAM BLUETEAM
Hoverboard power-up. Increases movement speed. Instant use, lasts until death.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 0, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
REDTEAM: Only player on the red team may pick up this item.
BLUETEAM: Only player on the blue team may pick up this item.
-------- NOTES --------
These team entities are intended to respawn instantly.

The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/scout.md3"*/

//=============================================================================

LIGHT ENTITY

//=============================================================================

/*QUAKED light (.5 .5 1) (-8 -8 -8) (8 8 8) LINEAR NOANGLE - - NOGRIDLIGHT
Non-displayed point light source.
-------- KEYS --------
light OR _light: Overrides the default 300 intensity. Negative values may be used for negative lights.
_color: Weighted RGB value of light color (default: 1.0 1.0 1.0 = white).
target: Lights pointed at a target will be spotlights.
radius: Overrides the default 64 unit radius of a spotlight at the target point.
fade: Fades light attenuation. Only affects linear lights.
scale: Scales light attenuation. Scales the "light" value.
style : Light style index number associated with worldspawn light style. Values are between 1 and 31.
_sun: Set this key to 1 on a spotlight to make an infinite sun light.
_deviance: Penumbra effect - distance measured in world units for point/spot lights, and degrees for suns (~0.5-3).
_samples: Penumbra effect - the number of random jitters distributed over the solid arc (~16).
_filter: Set this key to 1 to toggle on lightmap filtering.
_filterradius: Filters lightmaps within set radius.
_anglescale: Scales light attenuation. Smaller values lessens angle attenuation, larger values for sharper, more faceted lighting (default: 1.0).
-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).
NOANGLE: Ignore angle attenuation.
NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting).*/

//=============================================================================

/*QUAKED lightJunior (.35 .35 1) (-6 -6 -10) (6 6 10) LINEAR NOANGLE - - NOGRIDLIGHT
Non-displayed point light source that only affects entities (lightgrid).
-------- KEYS --------
light OR _light: Overrides the default 300 intensity.
_color: Weighted RGB value of light color (default: 1.0 1.0 1.0 = white).
target: Lights pointed at a target will be spotlights.
radius: Overrides the default 64 unit radius of a spotlight at the target point.
fade: Fades light attenuation. Only affects linear lights.
scale: Scales light attenuation. Scales the "light" value.
_sun: Set this key to 1 on a spotlight to make an infinite sun light.
-------- SPAWNFLAGS --------
LINEAR: Use a linear falloff. Default is inverse distance squared (more realistic).
NOANGLE: Ignore angle attenuation.
NOGRIDLIGHT: Do not affect the lightgrid (dynamic entity lighting). Setting this spawnflag will disable this light entirely.*/

//=============================================================================

MISC_* ENTITIES

//=============================================================================

/*QUAKED misc_constructiblemarker (1 0.85 0) ?
-------- KEYS --------
model2: Path/name of model to include (.md3 files only, e.g. models/mapobjects/jets/jets01.md3).
angles: Angles for the model.
skin: Optional .skin file to use for the model.
-------- NOTES --------
The entity has to target the trigger_objective_info entity belonging to the constructible.
Not used any more in the game. If used will behave like a func_static entity.
When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").*/

//=============================================================================

/*QUAKED misc_gamemodel (1 0 0) (-16 -16 -16) (16 16 16) ORIENT_LOD START_ANIMATE
Generic placeholder for inserting decorative models. Model placed in the game at runtime (rather than in the bsp).
-------- KEYS --------
model: Path/name of model to use (e.g. models/mapobjects/teleporter/teleporter.md3). This key MUST be set (see notes).
angle: Direction in which model will be oriented.
angles: Individual control of PITCH, YAW, and ROLL (default: 0 0 0).
modelscale: Floating-point value used to scale a model up or down (default: 1.0).
modelscale_vec: Floating-point vector used to scale a model's axes individually (default: 1.0 1.0 1.0).
skin: .skin file used to define shaders for model.
trunk: Diameter of solid core (used for trace visibility and collision (not ai pathing)).
trunkheight: Height of trunk.
frames: Number of animation frames.
start: Frame to start on.
fps: Frames per second to animate with.
-------- SPAWNFLAGS --------
ORIENT_LOD: The entity will yaw towards the player when the LOD switches.
START_ANIMATE: The entity will spawn animating.
-------- NOTES --------
The value (path/name) of the "model" key must point to an available model in your models folder to work (e.g. models/mapobjects/teleporter/teleporter.md3).*/

//=============================================================================

/*QUAKED misc_model (1 .5 .25) (-16 -16 -16) (16 16 16) - CLIPMODEL FORCEMETA
Generic placeholder for inserting decorative models. Requires compilation of map geometry to be added to level. MD3, ASE, 3DS, OBJ and other model formats are supported.
-------- KEYS --------
model: Path/name of model to use (e.g. models/mapobjects/teleporter/teleporter.md3). This key MUST be set (see notes).
angle: Direction in which model will be oriented.
angles: Individual control of PITCH, YAW, and ROLL (default: 0 0 0).
modelscale: Floating-point value used to scale a model up or down (default: 1.0).
modelscale_vec: Floating-point vector used to scale a model's axes individually (default: 1.0 1.0 1.0).
target: Used to attach the misc_model to a brush entity, where its "targetname" key is the same value.
_remap: Used to remap textures/shaders in the model. To remap all shaders to a given shader, use "*;models/mymodel/mytexture". To remap a specific shader, use "models/mymodel/old;models/mymodel/new". To remap additional shaders, use _remap2, _remap3, etc.
_lightmapscale: Floating point value scales the resolution of lightmaps on this model (if model is using lightmapped shaders) (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.
-------- SPAWNFLAGS --------
CLIPMODEL: Clips the model for player/weapon collisions. For use on large architectural or terrain models, not for small decorative models.
FORCEMETA: Toggles on q3map_forceMeta for lightmapped models.
-------- NOTES --------
The value (path/name) of the "model" key must point to an available model in your models folder to work (e.g. models/mapobjects/teleporter/teleporter.md3).*/

//=============================================================================

/*QUAKED misc_portal_camera (1 .5 .25) (-8 -8 -8) (8 8 8) SLOWROTATE FASTROTATE NOWOBBLE
Portal camera. This camera is used to project its view onto a portal surface in the level through the intermediary of a misc_portal_surface entity. Use the "angles" key or target an info_notnull entity to set the camera's pointing direction.
-------- KEYS --------
angles: This sets the pitch and yaw aiming angles of the portal camera (default: 0 0). Use "roll" key to set roll angle.
target: Point this to an info_notnull entity to set the camera's pointing direction.
targetname: A misc_portal_surface portal surface indicator must point to this.
roll: Roll angle of camera. A value of 0 is upside down and 180 is the same as the player's view.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
SLOWROTATE: Makes the portal camera rotate slowly along the roll axis.
FASTROTATE: Makes the portal camera rotate faster along the roll axis.
NOWOBBLE: Stops the camera portal from wobbling.
-------- NOTES --------
Both the setting "angles" key or "targeting an info_notnull" methods can be used to aim the camera. However, the info_notnull method is simpler. In both cases, the "roll" key must be used to set the roll angle. If either the SLOWROTATE or FASTROTATE spawnflag is set, then the "roll" value is irrelevant.*/

//=============================================================================

/*QUAKED misc_portal_surface (1 .5 .25) (-8 -8 -8) (8 8 8)
Portal surface indicator. This will "lock on" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the misc_portal_camera that this entity targets. Also used for mirrors (see notes).
-------- KEYS --------
target: Point this to a misc_portal_camera that "sees" the view you want to display on the portal.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
The entity must be no farther than 64 units away from the portal surface to lock onto it. To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a misc_portal_camera.*/

//=============================================================================

/*QUAKED misc_teleporter_dest (1 .5 .25) (-32 -32 -24) (32 32 -16)
Teleport destination location point for trigger_teleporter entities.
-------- KEYS --------
angle: Direction in which player will look when teleported.
targetname: Make the trigger_teleporter point to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

/*QUAKED misc_vis_dummy (1 .5 0) (-8 -8 -8) (8 8 8)
-------- NOTES --------
If this entity is "visible" (in player's PVS) then it's target is forced to be active whether it is in the player's PVS or not. This entity itself is never visible or transmitted to clients.

For safety, you should have each dummy only point at one entity (however, it's okay to have many dummies pointing at one entity).*/

//=============================================================================

/*QUAKED misc_vis_dummy_multiple (1 .5 0) (-8 -8 -8) (8 8 8)
-------- NOTES --------
If this entity is "visible" (in player's PVS) then it's target is forced to be active whether it is in the player's PVS or not. This entity itself is never visible or transmitted to clients.

This entity was created to have multiple speakers targeting it.
If a misc_vis_dummy_multiple entity is in players PVS, all the speakers targeting it with spawnflags bit 16 set will be sent.
On each target_speaker set spawnflags 16 and a target key. On one misc_vis_dummy_multiple set targetname (the same name).*/

//=============================================================================

PATH_* ENTITIES

//=============================================================================

/*QUAKED path_corner (.5 .3 0) (-8 -8 -8) (8 8 8)
Path corner entity that func_trains can be made to follow.
-------- KEYS --------
target: Point to next path_corner in the path.
targetname: The train following the path or the previous path_corner in the path points to this.
speed: Speed of func_train while moving to the next path corner. This will override the speed value of the train.
wait: Number of seconds func_train will pause on path corner before moving to next path corner (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.*/

//=============================================================================

PROPS_* ENTITIES

//=============================================================================

/*QUAKED props_skyportal (.6 .7 .7) (-8 -8 0) (8 8 16)
Allows you to place a static "far away" looking scene around the map.
-------- KEYS --------
fogcolor: RGB values 0.0 - 1.0.
fogfar: Distance from entity that fog is opaque.
-------- NOTES --------
Create a sky scene and place props_skyportal in it to use a skybox portal. Sky surfaces in the world will not be rendered, instead the skybox scene is seen.
To have the portal sky scene fogged, use any of the fog keys. To have the sky shader in the fog scene fogged, use skyfogvars in a sky shader.*/

//=============================================================================

SCRIPT_* ENTITIES

//=============================================================================

/*QUAKED script_multiplayer (1.0 0.25 1.0) (-8 -8 -8) (8 8 8)
This is used to script multiplayer maps.
-------- NOTES --------
Entity not displayed in game.
You MUST have one, and one only, of these in your map for it to function correctly.*/

//=============================================================================

SHOOTER_* ENTITIES

//=============================================================================

/*QUAKED shooter_grenade (1 0 .5) (-8 -8 -8) (8 8 8)
This will shoot a grenade each time it's triggered. Aiming is done by setting the "angles" key or by targeting an info_notnull entity.
-------- KEYS --------
angles: This sets the pitch and yaw aiming angles of shooter (default: 0 0). The roll angle does not apply.
target: This points to an info_notnull entity for aiming the grenades.
targetname: The activating trigger points to this.
random: Random aiming variance in degrees from the straight line to the targeted entity (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key).

Both the setting "angles" key or "targeting an info_notnull" methods can be used to aim the shooter. However, the info_notnull method is simpler.*/

//=============================================================================

/*QUAKED shooter_plasma (1 0 .5) (-8 -8 -8) (8 8 8)
This will shoot a plasma ball each time it's triggered. Aiming is done by setting the "angles" key or by targeting an info_notnull entity.
-------- KEYS --------
angles: This sets the pitch and yaw aiming angles of shooter (default: 0 0). The roll angle does not apply.
target: This points to an info_notnull entity for aiming the plasma balls.
targetname: The activating trigger points to this.
random: Random aiming variance in degrees from the straight line to the targeted entity (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key).

Both the setting "angles" key or "targeting an info_notnull" methods can be used to aim the shooter. However, the info_notnull method is simpler.*/

//=============================================================================

/*QUAKED shooter_rocket (1 0 .5) (-8 -8 -8) (8 8 8)
This will shoot a rocket each time it's triggered. Aiming is done by setting the "angles" key or by targeting an info_notnull entity.
-------- KEYS --------
angles: This sets the pitch and yaw aiming angles of shooter (default: 0 0). The roll angle does not apply.
target: This points to an info_notnull entity for aiming the rockets.
targetname: The activating trigger points to this.
random: Random aiming variance in degrees from the straight line to the targeted entity (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key).

Both the setting "angles" key or "targeting an info_notnull" methods can be used to aim the shooter. However, the info_notnull method is simpler.*/

//=============================================================================

TARGET_* ENTITIES

//=============================================================================

/*QUAKED target_delay (0 .7 .7) (-8 -8 -8) (8 8 8)
Time delay trigger intermediary. Like a target_relay, this can only be fired by other triggers which will cause it in turn to fire its own targets.
-------- KEYS --------
target: This points to entities to activate when this entity is triggered.
targetname: The activating trigger points to this.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
wait: Delay in seconds from when this gets triggered to when it fires its own targets (default: approx. 1).
delay: Same as wait. For consistency, wait is preferred.
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED target_give (0 .5 0) (-8 -8 -8) (8 8 8)
This is used to give ammo, weapons, health or items to the player who activates it.
-------- KEYS --------
target: This points to the item(s) to give when activated.
targetname: Activating trigger or spawn entity points to this.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
There are 2 ways to use this entity.
a) Automatically give items to players when they spawn in the game: Make a spawn location entity like info_player_deathmatch or CTF respawn points target this entity, then make it target the item(s) to give to the player upon respawn.
b) Give items to players during the game: Make a trigger_multiple target this entity, then make it target the item(s) to give to the player when the trigger is touched.

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED target_kill (0 .5 0) (-8 -8 -8) (8 8 8)
This will kill the player who activates the trigger that fires this target.
-------- KEYS --------
targetname: The activating trigger points to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

//QUAKED target_laser (0 .5 0) (-8 -8 -8) (8 8 8) START_ON
//Generates a red laser beam. I think this can somehow spawn in the game, I saw it once but it's too inconsistent to be usable. Commented out.
//-------- KEYS --------
//angles: Alternate "pitch, yaw, roll" angles method of aiming laser (default: 0 0 0).
//target: Point this to an info_notnull entity to set the laser's aiming direction.
//targetname: The activating trigger points to this.
//dmg (damage???): number of points of damage inflicted to player per server frame (default: 5 - integer values only).
//notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
//notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
//notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
//gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
//-------- SPAWNFLAGS --------
//START_ON: When set, the laser will start on in the game.

//=============================================================================

/*QUAKED target_print (0 .5 0) (-8 -8 -8) (8 8 8) REDTEAM BLUETEAM PRIVATE
This will print a message on the center of the screen when triggered. By default, all the clients will see the message.
-------- KEYS --------
message: Text string to print on screen.
targetname: The activating trigger points to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
REDTEAM: Only the red team players will see the message.
BLUETEAM: Only the blue team players will see the message.
PRIVATE: Only the player that activates the target will see the message.*/

//=============================================================================

/*QUAKED target_push (.5 .5 .5) (-8 -8 -8) (8 8 8) BOUNCEPAD
This can be used to create jump pads and launch ramps. The direction of push can be set by the "angles" key or pointing to an info_notnull entity. Unlike trigger_push, this is NOT client side predicted and must be activated by a trigger.
-------- KEYS --------
angles: This sets the pitch and yaw aiming angles of push entity (default: 0 0). The roll angle does not apply.
speed: Speed of push (default: 1000). Has no effect if entity targets an aiming entity.
target: This points to the aiming entity to which the player will jump.
targetname: The activating trigger points to this. Push originates from the location of the trigger.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
BOUNCEPAD: If set, trigger will play bounce noise instead of beep noise when activated (recommended).
-------- NOTES --------
To make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the info_notnull entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the info_notnull entity (or set the target_push's "angles" key). Note that the "angle" key also works.*/

//=============================================================================

/*QUAKED target_relay (0 .7 .7) (-8 -8 -8) (8 8 8) RED_ONLY BLUE_ONLY RANDOM
This can only be activated by other triggers which will cause it in turn to activate its own targets.
-------- KEYS --------
target: This points to entities to activate when this entity is triggered.
targetname: The activating trigger points to this.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
RED_ONLY: Only red team players can activate trigger.
BLUE_ONLY: Only red team players can activate trigger.
RANDOM: One one of the targeted entities will be triggered at random.
-------- NOTES --------
When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED target_remove_powerups (0 .7 .7) (-8 -8 -8) (8 8 8)
This takes away any and all item_* type powerups from player except health and armor (holdable_* items are not taken away either). Must be activated by a button or trigger_multiple entity. The player that activates the trigger will lose any powerup(s) currently in his possession.
-------- KEYS --------
targetname: The activating trigger points to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

/*QUAKED target_score (0 .5 0) (-8 -8 -8) (8 8 8)
This is used to automatically give frag points to the player who activates this. A spawn location entity like info_player_* or CTF respawn points can target this entity to give points to the player when he spawns in the game. Or a trigger can also be used to activate this. The activator of the trigger will get the points.
-------- KEYS --------
targetname: The activating trigger points to this.
count: Number of frag points to give to player (default: 1).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

/*QUAKED target_script_trigger (1 .7 .2) (-8 -8 -8) (8 8 8)
When used it will run the trigger event relating to it's target within it's routine.
-------- KEYS --------
target: The name of the trigger.
scriptname: This corresponds to the block.
-------- NOTES --------
Must have a target.*/

//=============================================================================

/*QUAKED target_speaker (0 .7 .7) (-8 -8 -8) (8 8 8) LOOPED_ON LOOPED_OFF GLOBAL ACTIVATOR VIS_MULTIPLE
Sound generating entity that plays .wav files. Normal non-looping sounds play each time the target_speaker is triggered. Looping sounds can be set to play by themselves (no activating trigger) or be toggled on/off by a trigger.
-------- KEYS --------
noise: Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).
wait: Delay in seconds between each time the sound is played ("random" key must be set - see notes).
random: Random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see notes).
targetname: The activating button or trigger points to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
LOOPED_ON: Sound will loop and initially start on in level (will toggle on/off when triggered).
LOOPED_OFF: Sound will loop and initially start off in level (will toggle on/off when triggered).
GLOBAL: Sound will play full volume throughout the level.
ACTIVATOR: Sound will play only for the player that activated the target.
VIS_MULTIPLE: Used for allow one misc_vis_dummy_multiple entity to cause multiple target_speaker entities to be sent to client. If a misc_vis_dummy_multiple entity is in players PVS, all the speakers targeting it will be sent. So, on each target_speaker set VIS_MULTIPLE and target (some name). On one misc_vis_dummy_multiple set targetname (the same name).
-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.

The combination of the "wait" and "random" keys can be used to play non-looping sounds without requiring an activating trigger but both keys must be used together. The value of the "random" key is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).*/

Multiple identical looping sounds will just increase volume without any speed cost.


//=============================================================================

/*QUAKED target_teleporter (0 .5 0) (-8 -8 -8) (8 8 8)
Activating this will teleport players to the location of the targeted misc_teleporter_dest entity. Unlike trigger_teleport, this entity must be activated by a trigger and does NOT allow client prediction of events.
-------- KEYS --------
target: This must point to a misc_teleporter_dest entity.
targetname: The activating trigger points to this.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

TEAM_* ENTITIES

//=============================================================================

/*QUAKED team_blueobelisk (0 .2 1) (-16 -16 0) (16 16 88)
Blue team obelisk. Used for CTF, Oneflag, Overload and Harvester game types for various functions.
-------- KEYS --------
angle: Direction in which model will be oriented.
-------- NOTES --------
Do not assign a gametype to this item unless the location of your CTF flags and your Overload obelisk will be different. It is used in all four team game types. The game will call for it as needed.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/overload_base.md3"*/

//=============================================================================

/*QUAKED team_CTF_blueflag (0 .2 1) (-16 -16 -16) (16 16 16)
Blue team flag for CTF games.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/b_flag.md3"*/

//=============================================================================

/*QUAKED team_CTF_blueplayer (0 .2 1) (-16 -16 -24) (16 16 64)
Initial Blue team spawning position for CTF games. This is where players spawn when they join the Blue team.
-------- KEYS --------
target: This can point at a target_give entity for respawn freebies.*/

//=============================================================================

/*QUAKED team_CTF_bluespawn (0 0 1) (-16 -16 -24) (16 16 64)
Blue team respawning position for CTF games. This is where Blue team players respawn after they get fragged.
-------- KEYS --------
target: This can point at a target_give entity for respawn freebies.*/

//=============================================================================

/*QUAKED team_CTF_neutralflag (1 .2 0) (-16 -16 -16) (16 16 16)
Neutral flag (One Flag CTF only).
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/n_flag.md3"*/

//=============================================================================

/*QUAKED team_CTF_redflag (1 .2 0) (-16 -16 -16) (16 16 16)
Red team flag for CTF games.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/flags/r_flag.md3"*/

//=============================================================================

/*QUAKED team_CTF_redplayer (1 .2 0) (-16 -16 -24) (16 16 64)
Initial Red team spawning position for CTF games. This is where players spawn when they join the Red team.
-------- KEYS --------
target: This can point at a target_give entity for respawn freebies.*/

//=============================================================================

/*QUAKED team_CTF_redspawn (1 0 0) (-16 -16 -24) (16 16 64)
Red team respawning position for CTF games. This is where Red team players respawn after they get fragged.
-------- KEYS --------
target: This can point at a target_give entity for respawn freebies.*/

//=============================================================================

/*QUAKED team_neutralobelisk (1 .2 1) (-16 -16 0) (16 16 88) SUSPENDED
Neutral obelisk. Used for Oneflag and Harvester game types for various functions.
-------- KEYS --------
angle: Direction in which model will be oriented.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
Do not assign a gametype to this item unless the location of your neutral flag and your Overload obelisk will be different. It is used for Oneflag and Harvester game types. The game will call for it as needed.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/obelisk/obelisk.md3"*/

//=============================================================================

/*QUAKED team_redobelisk (1 .2 0) (-16 -16 0) (16 16 88)
Red team obelisk. Used for CTF, Oneflag, Overload and Harvester game types for various functions.
-------- KEYS --------
angle: Direction in which model will be oriented.
-------- NOTES --------
Do not assign a gametype to this item unless the location of your CTF flags and your Overload obelisk will be different. It is used in all four team game types. The game will call for it as needed.
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/overload_base.md3"*/

//=============================================================================

TRIGGER_* ENTITIES

//=============================================================================

/*QUAKED trigger_always (.5 .5 .5) (-8 -8 -8) (8 8 8)
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.
-------- KEYS --------
target: This points to the entity to activate.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED trigger_hurt (.5 .5 .5) ? START_OFF TOGGLE SILENT NO_PROTECTION SLOW
Any player that touches this will be hurt by "dmg" points of damage once per server frame (very fast). A sizzling sound is also played while the player is being hurt.
-------- KEYS --------
dmg: Number of points of damage inflicted to player per server frame (default: 5 - integer values only).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- SPAWNFLAGS --------
START_OFF: Needs to be triggered (toggle) for damage.
TOGGLE: Allows trigger_hurt to be toggled on/off.
SILENT: Suppresses the sizzling sound while player is being hurt.
NO_PROTECTION: Player will be hurt regardless of protection (see notes).
SLOW: Changes the damage rate to once per second.
-------- NOTES --------
The invulnerability power-up (item_enviro) does not protect the player from damage caused by this entity regardless of whether the NO_PROTECTION spawnflag is set or not. Triggering a trigger_hurt will have no effect if the START_OFF spawnflag is not set. A trigger_hurt always starts on in the game.*/

//=============================================================================

/*QUAKED trigger_multiple (.5 .5 .5) ?
Variable size repeatable trigger. It will fire the entities it targets when touched by player. Can be made to operate like a trigger_once entity by setting the "wait" key to -1. It can also be activated by another trigger that targets it.
-------- KEYS --------
target: This points to the entity to activate.
targetname: The activating trigger points to this.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
wait: Time in seconds until trigger becomes re-triggerable after it's been touched (default: 0.2, -1 = trigger once).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"*/

//=============================================================================

/*QUAKED trigger_push (.5 .5 .5) ?
This is used to create jump pads and launch ramps. It MUST point to an info_notnull entity to work. Unlike target_push, this is client side predicted.
-------- KEYS --------
target: This points to the info_notnull to which the player will jump.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
-------- NOTES --------
To make a jump pad or launch ramp, place the info_notnull entity at the highest point of the jump and target it with this entity.*/

//=============================================================================

/*QUAKED trigger_teleport (.5 .5 .5) ?
Touching this will teleport players to the location of the targeted misc_teleporter_dest entity. This entity allows client prediction of events.
-------- KEYS --------
target: This must point to a misc_teleporter_dest entity.
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.*/

//=============================================================================

WEAPON_* ENTITIES

//=============================================================================

/*QUAKED weapon_beamgun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Beam Gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 100).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/beamg/beamg.md3"*/

//=============================================================================

/*QUAKED weapon_bfg (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Big Freaking Gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 20).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/bfg/bfg.md3"*/

//=============================================================================

/*QUAKED weapon_chaingun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Chaingun. A rapid fire instant hit weapon.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 80).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons/vulcan/vulcan.md3"*/

//=============================================================================

/*QUAKED weapon_grenadelauncher (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Grenade Launcher.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/grenadel/grenadel.md3"*/

//=============================================================================

/*QUAKED weapon_handgun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Trusty .44 handgun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/handgun/handgun.md3"*/

//=============================================================================

/*QUAKED weapon_heavy_machinegun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Heavy Machine Gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 100).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/heavy_machinegun/heavymgun.md3"*/

//=============================================================================

/*QUAKED weapon_machinegun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Machine Gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 40).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models\weapons2\machinegun\machinegun.md3"*/

//=============================================================================

/*QUAKED weapon_missilelauncher (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Missile Launcher.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/missile/missilel.md3"*/

//=============================================================================

/*QUAKED weapon_nailgun (0 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
Nailgun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons/nailgun/nailgun.md3"*/

//=============================================================================

/*QUAKED weapon_napalmlauncher (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Napalm Launcher.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/napalml/napalml.md3"*/

//=============================================================================

/*QUAKED weapon_phosphorgun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Phosphor Gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons/phosphorgun/phosphorgun.md3"*/

//=============================================================================

/*QUAKED weapon_plasmagun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Plasma gun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 50).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/plasma/plasma.md3"*/

//=============================================================================

/*QUAKED weapon_prox_launcher (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Proximity Mine. A mine which checks for proximity of a player or a time out. In team play, the mines are differentiated by teams.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 5).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons/proxmine/proxmine.md3"*/

//=============================================================================

/*QUAKED weapon_railgun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Railgun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/railgun/railgun.md3"*/

//=============================================================================

/*QUAKED weapon_rocketlauncher (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Rocket Launcher.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/rocketl/rocketl.md3"*/

//=============================================================================

/*QUAKED weapon_shotgun (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
Shotgun.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 5, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Sets the amount of ammo given to the player when weapon is picked up (default: 10).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
!gametype: Similar to gametype, it contain list of game types to NOT spawn the entity in. Gametype names should be separated with a comma or space. Values: single ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/weapons2/shotgun/shotgun.md3"*/

//=============================================================================

WORLDSPAWN ENTITY

//=============================================================================

/*QUAKED worldspawn (0 0 0) ?
Only used for the world.
-------- KEYS --------
message: Text to print at user logon. Used for name of level.
music: Path/name of looping .wav file used for level's music (e.g. music/sonic5.wav).
gravity: Gravity of level (default: 800 = normal gravity).
gridsize: Granularity of the lightgrid created by q3map. Value is three integers separated by spaces, representing number of units between grid points in X Y Z. Default gridsize value is 128 128 256. Use larger powers of 2 to reduce BSP size and compile time on very large maps.
fogclip: Uses VIS to exclude stuff beyond the specified distance.
mapcoordsmins: Top left corner coordinate (e.g. -256 256). Both mapcoordsmins and mapcoordsmaxs must be set for command map and auto map to work properly.
mapcoordsmaxs: Lower right corner coordinate (e.g. 256 -256). Both mapcoordsmins and mapcoordsmaxs must be set for command map and auto map to work properly.
sun: Shader to use for 'sun' image.
_blocksize: Q3Map always splits the BSP tree along the planes X, Y and Z. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density (default: 1024 1024 0, 0 values = disable).
_ambient OR ambient: Adds a constant value to overall lighting. Use is not recommended. Ambient light will have a tendency to flatten out variations in light and shade.
_color: RGB value for ambient light color (default: 0 0 0).
_floodlight: A quintuple of values (red green blue distance intensity) to set global floodlight parameters (good defaults are 240 240 255 1024 128).
_minlight: Minimum light value, levelwide. Uses the _color key to set color. Does not add, unlike ambient.
_minvertexlight: Minimum vertex lighting, levelwide.
_mingridlight: Minimum lightgrid (dynamic entity lighting) levelwide.
_keeplights: Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase.
_noshadersun: Ignore q3map_sun/sun directives in sky shaders and ONLY use entity sun lights.
_farplanedist: Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps.
_foghull: Shader to use for "fog hull". Foghull shader should be a sky shader. Omit the "textures/" prefix.
_lightmapscale: Floating point value scales the resolution of lightmaps on brushes/patches in the world. Can be overridden in func_group (or other entities) (default: 1.0).
_cs OR _castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_rs OR _receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_styleNalphaGen : Replace "N" in the key "_styleNalphaGen" with an integer between 1 and 31 as your style index. Values takes standard shader waveform functions (e.g. wave sin 0.5 0.3 0.25 1.5)
_styleNrgbGen : Replace "N" in the key "_styleNrgbGen" with an integer between 1 and 31 as your style index. Values take standard shader waveform functions (e.g. wave sin 0.5 0.3 0.25 1.5)
_celshader: Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix. Overridable in entities.
-------- TERRAIN KEYS --------
_indexmap OR alphamap: Path/name for the art file used to guide the mapping of textures on the terrain surface.
_layers OR layers: Integer value denotes number of unique root shaders that will be used on the terrain.
_shader OR shader: Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.*/


//=============================================================================
//=============================================================================
//=============================================================================

// REPLACEMENT ENTITIES

//=============================================================================
//=============================================================================
//=============================================================================

/*QUAKED ammo_lightning (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Lightning Gun ammo. Gives the player 60 by default.
-------- KEYS --------
wait : Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).
random : Random time variance in seconds added or subtracted from "wait" delay (default 0 - see notes).
count : Sets the amount of ammo given to the player when picked up (default 60).
team : Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target : Picking up the item will trigger the entity this points to.
targetname : A target_give entity can point to this for respawn freebies.
targetShaderName : Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName : Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree : When set to 1, when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam : When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle : When set to 1, entity will not spawn in Single Player mode (bot play mode).
notbot : Used to make an item invisible for bot attraction.
gametype : Used to set item to spawn in only selected gametype(s). Requires Q3A 1.32 point release.
	ffa : Free for All
	tournament : Tournament
	single : Single Player
	team : Team Deathmatch
	ctf : Capture the Flag
	oneflag : One Flag CTF (Team Arena)
	obelisk : Overload (Team Arena)
	harvester : Harvester (Team Arena)
	teamtournament : Team Tournament (Team Arena)
-------- SPAWNFLAGS --------
SUSPENDED : Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/ammo/lightningam.md3"
*/

/*QUAKED holdable_medkit (.7 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Medkit that can be picked up and used later. Brings the player's health back to 100 when used. Player can only carry one holdable item at a time.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 60, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/holdable/medkit.md3"*/

//=============================================================================

/*QUAKED holdable_teleporter (.7 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Teleporter item that can be picked up and used later. Teleports the player to a random player spawn point when used. Player can only carry one holdable item at a time.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 60, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/holdable/teleporter.md3"*/


/*QUAKED item_enviro (.5 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Battle Suit power-up - Gives protection against slime, lava and weapon splash damage. Lasts 30 seconds.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/enviro.md3"*/

//=============================================================================

/*QUAKED item_flight (.5 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Flight power-up. Lasts 60 seconds.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 60).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/flight.md3"*/

//=============================================================================

/*QUAKED item_haste (.5 0 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Speed power-up. Makes player run at double speed for 30 seconds.
-------- KEYS --------
wait: Time in seconds before item respawns after being picked up (default: 120, -1 = never respawn).
random: Random time variance in seconds added or subtracted from "wait" delay (default: 0 - see notes).
count: Time in seconds power-up will last when picked up (default: 30).
team: Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target: Picking up the item will trigger the entity this points to.
targetname: A target_give entity can point to this for respawn freebies.
targetShaderName: Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName: Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.
notbot: When set to 1, a bot will never seek out this item.
-------- SPAWNFLAGS --------
SUSPENDED: Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/instant/haste.md3"*/

/*QUAKED holdable_invulnerability (.3 .3 1) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Invulnerability. Creates an energy shield that protects the player against all weapons except proximity mines. Effect lasts XX seconds.
-------- KEYS --------
wait : time in seconds before item respawns after being picked up (default 60, -1 = never respawn).
random : random time variance in seconds added or subtracted from "wait" delay (default 0 - see Notes).
team : set this to team items. Teamed items will respawn randomly after team master is picked up (see Notes).
target : picking up the item will trigger the entity this points to.
targetname : a target_give entity can point to this for respawn freebies.
notbot: (NEW KEY PROPERTY) when set to 1, a bot will never seek out this item.
notfree : when set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam : when set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle : when set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype : The valid values are ffa, tournament, single, team, ctf, oneflag, obelisk, harvester. Once a value for this key is set, it will ONLY appear in the listed gametype(s). Separate gametypes by commas.
-------- SPAWNFLAGS --------
SUSPENDED : item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models/powerups/holdable/invulnerability.md3"*/

/*QUAKED target_position (0 .5 0) (-8 -8 -8) (8 8 8)
DEPRECATED! Aiming target for entities like light, misc_portal_camera and trigger_push (jump pads) in particular.
-------- KEYS --------
targetname : The entity that requires an aiming direction points to this.
notfree : When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam : When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle : When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype : Used to set item to spawn in only selected gametype(s). Requires Q3A 1.32 point release.
	ffa : Free for All
	tournament : Tournament
	single : Single Player
	team : Team Deathmatch
	ctf : Capture the Flag
	oneflag : One Flag CTF (Team Arena)
	obelisk : Overload (Team Arena)
	harvester : Harvester (Team Arena)
	teamtournament : Team Tournament (Team Arena)
-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.*/

/*QUAKED target_location (1 0 0) (-8 -8 -8) (8 8 8)
DEPRECATED! Location marker used by bots and players for team orders and team chat in the course of Teamplay games. The closest target_location in sight is used for the location. If none is in sight, the closest in distance is used.
-------- KEYS --------
message: Name of the location (text string). Displayed in parentheses in front of all team chat and order messages.
count: Color of the location text displayed in parentheses during team chat. Set to 0-7 for color.
   0: White (default)
   1: Red
   2: Green
   3: Yellow
   4: Blue
   5: Cyan
   6: Magenta
   7: White
notfree: When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam: When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle: When set to 1, entity will not spawn in Single Player mode (bot play mode).
gametype: Defines the gametypes that will spawn this item. Values: single tournament ffa team ctf oneflag obelisk harvester.*/

/*QUAKED weapon_lightning (1 0 .5) (-16 -16 -16) (16 16 16) SUSPENDED
DEPRECATED! Lightning Gun.
-------- KEYS --------
wait : Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).
random : Random time variance in seconds added or subtracted from "wait" delay (default 0 - see notes).
count : Sets the amount of ammo given to the player when weapon is picked up (default 100).
team : Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).
target : Picking up the item will trigger the entity this points to.
targetname : A target_give entity can point to this for respawn freebies.
targetShaderName : Points to the name of the original shader to swap out for triggerable shader entities (see notes).
targetShaderNewName : Points to the name of the new shader to swap in for triggerable shader entities (see notes).
notfree : When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.
notteam : When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.
notsingle : When set to 1, entity will not spawn in Single Player mode (bot play mode).
notbot : Used to make an item invisible for bot attraction.
gametype : Used to set item to spawn in only selected gametype(s). Requires Q3A 1.32 point release.
	ffa : Free for All
	tournament : Tournament
	single : Single Player
	team : Team Deathmatch
	ctf : Capture the Flag
	oneflag : One Flag CTF (Team Arena)
	obelisk : Overload (Team Arena)
	harvester : Harvester (Team Arena)
	teamtournament : Team Tournament (Team Arena)
-------- SPAWNFLAGS --------
SUSPENDED : Item will spawn where it was placed in map and won't drop to the floor.
-------- NOTES --------
The amount of time it takes for an item in the team to respawn is determined by the "wait" value of the item that was picked up previously. So if one of the items in the team has it's "wait" key set to -1 (never respawn), the random respawning cycle of the teamed items will stop after that item is picked up.

When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the targetShaderName value, will be changed to the targetShaderNewName value. For example, turning a light on:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
"targetShaderName" "textures/proto2/redlight_off"
"targetShaderNewName" "textures/proto2/redlight_off"
-------- MODEL FOR RADIANT ONLY - DO NOT SET THIS AS A KEY --------
model="models\weapons2\lightning\lightning.md3"
*/

